[project]
name = "{{cookiecutter.project_name}}"
version = "0.0.1"
description = "{{cookiecutter.project_description}}"
authors = [{ name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.9,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
license = {text = "All Rights Reserved"}

[project.urls]
Homepage = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"
Repository = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}"
Documentation = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    {% if cookiecutter.deptry == 'y' %}"deptry>=0.20.0",{% endif %}
    "mypy>=0.991",
    {% if cookiecutter.codecov == 'y' %}"pytest-cov>=4.0.0",{% endif %}
    "ruff>=0.6.9",
    {% if cookiecutter.mkdocs == 'y' %}"mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",{% endif %}
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.setuptools]
py-modules = ["{{cookiecutter.project_slug}}"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".history",
    "**/gignore*/**",
    "tests"
]

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "E", "W", # Pycodestyle
    "C90",   # McCabe complexity
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "FA",    # flake8-future-annotations
    "PIE",   # flake8-pie
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SIM",   # flake8-simplify
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "PL",    # Pylint
    "FAST",  # flake8-faster
    "RUF",   # Ruff-specific
    "TID",   # flake8-tidy-imports
    "T10",   # debugger checks
    "PGH",   # pygrep-hooks
    "TRY"    # exception handling
]
ignore = [
    "ASYNC109",  # Prevent async/await in __aenter__
    "ARG001",    # Unused function argument
    "S101",      # Use of assert
    "PLR0917",   # Too many positional arguments
    "PLR0913",   # Too many arguments to function call
    "E501",      # Line too long (handled by formatter)
    "E731"       # Lambda assignments
]
preview = true
fixable = ["ALL"]
unfixable = []
extend-safe-fixes = ["ANN201"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
known-first-party = ["{{cookiecutter.project_slug}}"]
combine-as-imports = true

[tool.pyright]
include = ["."]
exclude = [
    "**/__pycache__",
    ".venv",
    ".history",
    ".git",
    ".ruff_cache",
    ".pytype",
    ".mypy_cache",
    "**/gignore*/**",
    "tests"
]
venvPath = "."
venv = ".venv"
pythonVersion = "3.12"
pythonPlatform = "Darwin"

typeCheckingMode = "standard"

analyzeUnannotatedFunctions = true
deprecateTypingAliases = true
strictSetInference = true
strictDictionaryInference = true
strictListInference = true

[tool.ruff.format]
preview = true

{% if cookiecutter.codecov == "y"-%}
[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.project_slug}}"]
{% endif %}

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
